今天学习的内容
1:复习总结复习重点
2:解答问题
3:ajax处理不同类型的数据
  3.1 纯文本
	3.2 文本与网页------>(重点)
	3.3 javascript------>掌握
	3.4 xml------------->掌握
	3.5 json------------>重点难点(明天)
#-----------------------
1:复习总结复习重点
  1.1:http协议响应
	     1XX  一共三位数字 1开头
			      100 101 102 ...
       2XX
			 
	1.2:响应的主体类型
	    text/plain
			text/html
			application/javascript
			text/css
			....
  header("content-type:text/html;charset=utf-8"); 
	1.3:ajax
	    异步的javascript and xml
      XMLHttpRequest
			作用:在无刷新无提交的情况下局部更新网页
			(发起异步请求并接收返回数据)
			属性:
			readyState: 0 1 2 3 4 
			status:     状态码 200 304 404 500
			responseText 接收响应消息主体
			responseXML  接收响应消息主体 
			方法:
			open(method,url,isAsyn);
			send(null);      把请求消息发送给web
      事件:
			onreadystatechange
  1.4:ajax 步骤
	   a:创建对象
		 b:绑定事件
		   判断状态码 200 接收完成 4
			 xhr.responseText
		 c:open()
		 d:send()
		2:解答问题
			 $sql = "set names utf8"; 
	3:ajax处理不同类型的数据
	
			 3.1:*#用户登录 AJAX     9:30---9:40
			 login.html   登录表单
			 1:填写用户名密码
			 2:点击提交按钮-->发送ajax请求
				 并且接收返回值
				 success
					 1:提示:alert();
					 2:自动跳转主程序 main.php
				 error
					 1:提示:alert();
			 *login_do.php 处理表单程序
			 1:获取表单数据 uname upwd
			 2:查询数据库
			 3:判断
			 4:输出  success   登录成功 
							 error     登录失败
			 *main.php 
			 欢迎进入系统页面

		#如果ajax程序出错如何处理
		bug.txt

    3.2:使用xhr接收响应消息(不同类型)
		 a:text/plain(纯文本字母数字汉字)
      服务器:#最后几行
			 header("content-type:text/plain;charset=utf-8");
			 echo "success";
			客户端:
			 xhr.responseText;
		 b:text/html(html片段,不是完整DOM树)
		  服务器:#最后几行
			 header("content-type:text/html;charset=utf-8");
			 echo "<li>css指南</li><li>js大全</li>";
		  客户端:
			 xhr.responseText;

      示例:搜索建议
			1:编写sql 库 dangdang/t_book
			2:添加20行   11:35--11:45
			3:book_search.html 
			  输入框中只要有一个输入,
				<input type
				onkeyup  j
				则发起一个GET异步请求,
				获取包含当前关键字书名列表
      4:book_search_do.php
			  a:获取用户输入关键字 css
				b:查询数据库中所有包含css书名图书
				c:拼一个html片段
				  <li>css指南<li>
					<li>css大全</li>
       SELECT title FROM t_book
       WHERE title like '%j%';

      升级:采用post方法发送请求
			1:book_search.html
			  book_search_post.html
			  #改二行
				#加一行   14:40--14:45
				xhr.open('POST','book_search_do.php',true);
				xhr.setRequestHeader('Content-Type',
				'application/x-www-form-urlencoded');
				xhr.send('k=v&k1=v1&k2=b');
      2:book_search_do.php



			
			c:application/javascript(js)--掌握
			提示:
			{
			一般的js书写在js文件中,
			使用script标签请求--静态的js--
			任何人任何时间访问js都一样
			}
			在些情况下,需要服务器返回"动态js"
			--根据客户端不同或访问时间不同,
			js不同

			服务器:
			 #修改服务器响应主体类型
			 header('content-type:application/javascript');
			 echo "var msg = 10;alert(msg);";
			客户端:
			 eval();函数执行字符串格式js程序
			 eval(xhr.responseText);
			 把js解析出来

      实现i18n国际化
			     (internationalization)
      1:编写php 读取客户端请求头部
			  (Accept-Language)截取前两个字母,
				zh/jp/en
				客户端的首选语言，据此返回不同语言.
			2:编写html
			  待页面加载完成，发起异步请求,GET
      
			示例:国际化示例分析.txt
    
		  d:XML 
			服务器向客户端发送批量复合数据
			批量复合数据:一个数组,包含多个数据
			[
			 [id=>1,name=>'tom1'],
			 [id=>2,name=>'tom2'],
			 .....
			]
			1)text/html
			  <tr><td>1</td><td>tom1</td></tr>
			  <tr><td>2</td><td>tom2</td></tr>
				客户端xhr获取响用，
				直接追加dom树一个节点即可.
				特点:客户端处理简单  
			2)application/xml
			  xml:通用性少很多(少)


				html:超文本标记语言,所有标签预定义好.
				     用于描述一个网页.
        <h1></h1>..<h6></h6>
				xml:可扩展的标签语言.所有标签自定义
				xml语法要求
				1:xml文档声明(第一行)
				<?xml version="1.0" encoding="utf-8"?>
				2:整篇xml字符串有且只能有一个根元素
				3:标签有开始就必须要有结束,
				  开始结束标签必须完成相同
					<book></book>
				4:标签可以嵌套但不能交叉
				5:标签可以有任意属性
				  属性值必须用"" 括起来
        示例:books.xml

		   
			  练习:编写一个列表
				0:dangdang/t_book
				1:book_list.html
				  1.1:表格头
          1.2:在页面加载完成之后
					    发送ajax GET请求
          1.3:接收响应数据
					    xhr.responseXML
          <table>
					  <tr>标题  图片  价格</tr>
            <tr>
						  <td>js大全</td>
							<td>100</td>
							<td>1.jpg</td>
						</tr>
					</table>
					DOM{核心DOM/HTML DOM/XML}
					#document.querySelectAll("book");
          #document.querySelect("title");
					#innerHTML
				2:book_list_do.php  16:45---17:00
				  2.1:查询 t_book(title/pic/price)
					2.2:将查询结果拼xml格式字符串
					<books>
						<book>
							 <title>js</title>
							 <pic>1.jpg</pic>
							 <price>100</price>
						</book>
					</books>



      作业: 
			1:图书搜索 html
			2:xml 图书列表
